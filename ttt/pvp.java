/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ttt;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.sound.sampled.*;
import java.io.*;

/**
 *
 * @author WEBACC
 */
public class pvp extends javax.swing.JFrame {
    char playerSign = 'X';
    int totalCells = 9;
    int totalRows = 3;
    int totalColumns = 3;
    JButton[] jButtons = new JButton[totalCells];
    int xScore = 0, dScore = 0, oScore = 0;
    String x, d, o;

    /**
     * Creates new form pvp
     */
    public pvp() {
        initComponents();
        GridLayout ticTacToeGridLayout = new GridLayout(totalRows, totalColumns);
        gameInReal.setLayout(ticTacToeGridLayout);
        createButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        heading = new javax.swing.JLabel();
        gameInReal = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        menuBG = new javax.swing.JPanel();
        menuBtn = new javax.swing.JLabel();
        backBG = new javax.swing.JPanel();
        backBtn = new javax.swing.JLabel();
        scoreBoard = new javax.swing.JPanel();
        player1G = new javax.swing.JPanel();
        player1Title = new javax.swing.JLabel();
        player1Score = new javax.swing.JLabel();
        drawG = new javax.swing.JPanel();
        drawTitle = new javax.swing.JLabel();
        drawScore = new javax.swing.JLabel();
        player2G = new javax.swing.JPanel();
        player2Title = new javax.swing.JLabel();
        player2Score = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        heading.setBackground(new java.awt.Color(0, 0, 0));
        heading.setFont(new java.awt.Font("Segoe UI", 1, 50)); // NOI18N
        heading.setForeground(new java.awt.Color(255, 255, 255));
        heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading.setText("TIC TAC TOE");

        gameInReal.setBackground(new java.awt.Color(255, 255, 255));
        gameInReal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        gameInReal.setPreferredSize(new java.awt.Dimension(400, 400));
        gameInReal.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        menuBG.setBackground(new java.awt.Color(0, 0, 0));
        menuBG.setForeground(new java.awt.Color(255, 255, 255));

        menuBtn.setBackground(new java.awt.Color(0, 0, 0));
        menuBtn.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        menuBtn.setForeground(new java.awt.Color(255, 255, 255));
        menuBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuBtn.setText("=");
        menuBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBtnMouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuBtnMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout menuBGLayout = new javax.swing.GroupLayout(menuBG);
        menuBG.setLayout(menuBGLayout);
        menuBGLayout.setHorizontalGroup(
                menuBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(menuBtn, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE));
        menuBGLayout.setVerticalGroup(
                menuBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(menuBtn, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE));

        backBG.setBackground(new java.awt.Color(0, 0, 0));
        backBG.setForeground(new java.awt.Color(255, 255, 255));

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backBtn.setText("<-");
        backBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backBtnMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                backBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout backBGLayout = new javax.swing.GroupLayout(backBG);
        backBG.setLayout(backBGLayout);
        backBGLayout.setHorizontalGroup(
                backBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE));
        backBGLayout.setVerticalGroup(
                backBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(backBtn, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(backBG, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(menuBG, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(menuBG, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(backBG, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE));

        scoreBoard.setBackground(new java.awt.Color(0, 0, 0));
        scoreBoard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        scoreBoard.setForeground(new java.awt.Color(255, 255, 255));
        scoreBoard.setLayout(new java.awt.GridLayout(1, 3, 5, 0));

        player1G.setBackground(new java.awt.Color(0, 0, 0));
        player1G.setLayout(new java.awt.GridLayout(0, 1, 2, 2));

        player1Title.setBackground(new java.awt.Color(0, 0, 0));
        player1Title.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        player1Title.setForeground(new java.awt.Color(255, 255, 255));
        player1Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player1Title.setText("PLAYER 1 ( X )");
        player1G.add(player1Title);

        player1Score.setBackground(new java.awt.Color(0, 0, 0));
        player1Score.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        player1Score.setForeground(new java.awt.Color(255, 255, 255));
        player1Score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player1Score.setText("0");
        player1G.add(player1Score);

        scoreBoard.add(player1G);

        drawG.setBackground(new java.awt.Color(0, 0, 0));
        drawG.setLayout(new java.awt.GridLayout(0, 1, 2, 2));

        drawTitle.setBackground(new java.awt.Color(0, 0, 0));
        drawTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        drawTitle.setForeground(new java.awt.Color(255, 255, 255));
        drawTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        drawTitle.setText("DRAW");
        drawG.add(drawTitle);

        drawScore.setBackground(new java.awt.Color(0, 0, 0));
        drawScore.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        drawScore.setForeground(new java.awt.Color(255, 255, 255));
        drawScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        drawScore.setText("0");
        drawG.add(drawScore);

        scoreBoard.add(drawG);

        player2G.setBackground(new java.awt.Color(0, 0, 0));
        player2G.setLayout(new java.awt.GridLayout(0, 1, 2, 2));

        player2Title.setBackground(new java.awt.Color(0, 0, 0));
        player2Title.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        player2Title.setForeground(new java.awt.Color(255, 255, 255));
        player2Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player2Title.setText("PLAYER 2 ( O )");
        player2G.add(player2Title);

        player2Score.setBackground(new java.awt.Color(0, 0, 0));
        player2Score.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        player2Score.setForeground(new java.awt.Color(255, 255, 255));
        player2Score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player2Score.setText("0");
        player2G.add(player2Score);

        scoreBoard.add(player2G);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(heading, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(gameInReal, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(scoreBoard, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, 63,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gameInReal, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scoreBoard, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap()));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_menuBtnMouseClicked
        // TODO add your handling code here:
        close();
        new pageOne().setVisible(true);
    }// GEN-LAST:event_menuBtnMouseClicked

    private void menuBtnMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_menuBtnMouseEntered
        // TODO add your handling code here:
        menuBtn.setBackground(new Color(255, 255, 255));
        menuBtn.setForeground(new Color(0, 0, 0));
        menuBG.setBackground(new Color(255, 255, 255));
    }// GEN-LAST:event_menuBtnMouseEntered

    private void menuBtnMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_menuBtnMouseExited
        // TODO add your handling code here:
        menuBtn.setBackground(new Color(0, 0, 0));
        menuBtn.setForeground(new Color(255, 255, 255));
        menuBG.setBackground(new Color(0, 0, 0));
    }// GEN-LAST:event_menuBtnMouseExited

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_backBtnMouseClicked
        // TODO add your handling code here:
        close();
        new Start().setVisible(true);
    }// GEN-LAST:event_backBtnMouseClicked

    private void backBtnMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_backBtnMouseEntered
        // TODO add your handling code here:
        backBtn.setBackground(new Color(255, 255, 255));
        backBtn.setForeground(new Color(0, 0, 0));
        backBG.setBackground(new Color(255, 255, 255));

    }// GEN-LAST:event_backBtnMouseEntered

    private void backBtnMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_backBtnMouseExited
        // TODO add your handling code here:
        backBtn.setBackground(new Color(0, 0, 0));
        backBtn.setForeground(new Color(255, 255, 255));
        backBG.setBackground(new Color(0, 0, 0));
    }// GEN-LAST:event_backBtnMouseExited

    public void createButtons() {
        for (int i = 0; i <= 8; i++) {

            jButtons[i] = new JButton();

            jButtons[i].setText("");

            jButtons[i].addActionListener(e -> {

                JButton clickedBtn = (JButton) e.getSource();
                clickedBtn.setText(String.valueOf(playerSign));
                clickedBtn.setEnabled(false);

                if (playerSign == 'X') {
                    playerSign = 'O';
                } else {
                    playerSign = 'X';
                }
                showWinner();
            });

            gameInReal.add(jButtons[i]);
        }
    }

    public void showWinner() {

        if (checkForWinner()) {

            if (playerSign == 'X') {
                playerSign = 'O';
                oScore++;
                o = String.valueOf(oScore);
                player2Score.setText(o);
                // System.out.println(o);
            } else {
                playerSign = 'X';
                xScore++;
                x = String.valueOf(xScore);
                player1Score.setText(x);
                // System.out.println(x);
            }
            JOptionPane jOptionPane = new JOptionPane();
            int dialog = JOptionPane.showConfirmDialog(jOptionPane, "Game Over. " + "The winner is " + playerSign + " ",
                    "Result",
                    JOptionPane.DEFAULT_OPTION);

            if (dialog == JOptionPane.OK_OPTION) {
                reset();
            }
            // System.exit(0);

        } else if (checkIfMatchDraw()) {
            JOptionPane jOptionPane = new JOptionPane();
            int dialog = JOptionPane.showConfirmDialog(jOptionPane, "Game Draw", "Result", JOptionPane.DEFAULT_OPTION);

            dScore++;
            d = String.valueOf(dScore);
            drawScore.setText(d);
            // System.out.println(d);
            if (dialog == JOptionPane.OK_OPTION) {
                reset();
            }
            // System.exit(0);
        }
    }

    public void reset() {
        for (int i = 0; i <= 8; i++) {

            jButtons[i].setText("");
            jButtons[i].setEnabled(true);
        }
    }

    public boolean checkIfMatchDraw() {
        boolean gridsFull = true;
        for (int i = 0; i < totalCells; i++) {
            if (jButtons[i].getText().equals("")) {
                gridsFull = false;
            }
        }
        return gridsFull;
    }

    public boolean checkForWinner() {
        return checkAllRows() || checkAllColumns() || checkTheDiagonals();
    }

    public boolean checkAllRows() {
        int i = 0;
        for (int j = 0; j < 3; j++) {
            if (jButtons[i].getText().equals(jButtons[i + 1].getText())
                    && jButtons[i].getText().equals(jButtons[i + 2].getText())
                    && !jButtons[i].getText().equals("")) {
                return true;
            }
            i = i + 3;

        }
        return false;
    }

    public boolean checkAllColumns() {

        int i = 0;
        for (int j = 0; j < 3; j++) {

            if (jButtons[i].getText().equals(jButtons[i + 3].getText())
                    && jButtons[i].getText().equals(jButtons[i + 6].getText())
                    && !jButtons[i].getText().equals("")) {
                return true;
            }
            i++;
        }
        return false;
    }

    public boolean checkTheDiagonals() {
        if (jButtons[0].getText().equals(jButtons[4].getText()) && jButtons[0].getText().equals(jButtons[8].getText())
                && !jButtons[0].getText().equals(""))
            return true;
        else
            return jButtons[2].getText().equals(jButtons[4].getText())
                    && jButtons[2].getText().equals(jButtons[6].getText())
                    && !jButtons[2].getText().equals("");
    }

    public void close() {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pvp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pvp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pvp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pvp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pvp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backBG;
    private javax.swing.JLabel backBtn;
    private javax.swing.JPanel drawG;
    private javax.swing.JLabel drawScore;
    private javax.swing.JLabel drawTitle;
    private javax.swing.JPanel gameInReal;
    private javax.swing.JLabel heading;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel menuBG;
    private javax.swing.JLabel menuBtn;
    private javax.swing.JPanel player1G;
    private javax.swing.JLabel player1Score;
    private javax.swing.JLabel player1Title;
    private javax.swing.JPanel player2G;
    private javax.swing.JLabel player2Score;
    private javax.swing.JLabel player2Title;
    private javax.swing.JPanel scoreBoard;
    // End of variables declaration//GEN-END:variables
}
